{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gks31\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uD55C\\uC774\\uC74C \\uCF54\\uB4DC\\\\ingang\\\\ingang_app\\\\src\\\\components\\\\MyCourses.js\",\n  _s = $RefreshSig$();\n// MyCourses.js\n// MY 강의 페이지 - 비디오 구현\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCourses = ({\n  videoId\n}) => {\n  _s();\n  const [transcript, setTranscript] = useState(''); // 자막을 저장할 상태 변수\n\n  useEffect(() => {\n    // 백엔드에 자막 생성 요청을 보냄\n    const fetchTranscript = async () => {\n      try {\n        const response = await axios.post('/video/transcribe', null, {\n          params: {\n            youtubeUrl: `https://www.youtube.com/watch?v=${videoId}`\n          }\n        });\n        setTranscript(response.data); // 자막 데이터를 상태로 저장\n      } catch (error) {\n        console.error('Error fetching transcript:', error);\n        setTranscript('자막을 가져오는 중 오류가 발생했습니다.');\n      }\n    };\n    fetchTranscript();\n  }, [videoId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-courses-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: `https://www.youtube.com/embed/${videoId}?si=WEWv1y5QUSGuSCvP` // YouTube 비디오의 URL\n        ,\n        title: \"YouTube video player\",\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" // 비디오 플레이어의 기능을 제어\n        ,\n        referrerPolicy: \"strict-origin-when-cross-origin\" // 보안\n        ,\n        allowFullScreen: true // 전체 화면 모드\n        ,\n        className: \"youtube-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD559\\uC2B5 \\uB178\\uD2B8 \\uBD80\\uBD84\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC790\\uB3D9 \\uC0DD\\uC131\\uB41C \\uC790\\uB9C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCourses, \"o++wQ7V3d3/Fw4s0DQXjdpYxrK0=\");\n_c = MyCourses;\nexport default MyCourses;\nvar _c;\n$RefreshReg$(_c, \"MyCourses\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MyCourses","videoId","_s","transcript","setTranscript","fetchTranscript","response","post","params","youtubeUrl","data","error","console","className","children","src","title","frameBorder","allow","referrerPolicy","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gks31/OneDrive/바탕 화면/한이음 코드/ingang/ingang_app/src/components/MyCourses.js"],"sourcesContent":["// MyCourses.js\r\n// MY 강의 페이지 - 비디오 구현\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MyCourses = ({ videoId }) => {\r\n  const [transcript, setTranscript] = useState(''); // 자막을 저장할 상태 변수\r\n\r\n  useEffect(() => {\r\n    // 백엔드에 자막 생성 요청을 보냄\r\n    const fetchTranscript = async () => {\r\n      try {\r\n        const response = await axios.post('/video/transcribe', null, {\r\n          params: { youtubeUrl: `https://www.youtube.com/watch?v=${videoId}` },\r\n        });\r\n        setTranscript(response.data); // 자막 데이터를 상태로 저장\r\n      } catch (error) {\r\n        console.error('Error fetching transcript:', error);\r\n        setTranscript('자막을 가져오는 중 오류가 발생했습니다.');\r\n      }\r\n    };\r\n\r\n    fetchTranscript();\r\n  }, [videoId]);\r\n\r\n  return (\r\n    <div className=\"my-courses-container\">\r\n      <div className=\"video-wrapper\">\r\n        <iframe \r\n          src={`https://www.youtube.com/embed/${videoId}?si=WEWv1y5QUSGuSCvP`} // YouTube 비디오의 URL\r\n          title=\"YouTube video player\" \r\n          frameBorder=\"0\" \r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" // 비디오 플레이어의 기능을 제어\r\n          referrerPolicy=\"strict-origin-when-cross-origin\" // 보안\r\n          allowFullScreen // 전체 화면 모드\r\n          className=\"youtube-video\" \r\n        ></iframe>\r\n      </div>\r\n      <div className=\"course-notes\">\r\n        <h1>학습 노트 부분</h1>\r\n        <div className=\"transcript\">\r\n          <h2>자동 생성된 자막</h2>\r\n          <p>{transcript}</p> {/* 생성된 자막 표시 */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCourses;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE;UAC3DC,MAAM,EAAE;YAAEC,UAAU,EAAE,mCAAmCR,OAAO;UAAG;QACrE,CAAC,CAAC;QACFG,aAAa,CAACE,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDP,aAAa,CAAC,wBAAwB,CAAC;MACzC;IACF,CAAC;IAEDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACEF,OAAA;IAAKc,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCf,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5Bf,OAAA;QACEgB,GAAG,EAAE,iCAAiCd,OAAO,sBAAuB,CAAC;QAAA;QACrEe,KAAK,EAAC,sBAAsB;QAC5BC,WAAW,EAAC,GAAG;QACfC,KAAK,EAAC,qGAAqG,CAAC;QAAA;QAC5GC,cAAc,EAAC,iCAAiC,CAAC;QAAA;QACjDC,eAAe,OAAC;QAAA;QAChBP,SAAS,EAAC;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNzB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3Bf,OAAA;QAAAe,QAAA,EAAI;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBzB,OAAA;QAAKc,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBf,OAAA;UAAAe,QAAA,EAAI;QAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBzB,OAAA;UAAAe,QAAA,EAAIX;QAAU;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1CIF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}